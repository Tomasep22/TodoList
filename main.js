(()=>{"use strict";const t=function(){let t={};return{on:function(e,n){t[e]=t[e]||[],t[e].push(n)},emit:function(e,n){t[e]&&t[e].forEach((t=>t(n)))}}}(),e=function(){let e=[{title:"task1",priority:"low",done:!0,project:"project1"},{title:"task2",priority:"high",done:!1,project:"inbox"}];function n(t){const n=((t,e="inbox")=>({title:t,project:e}))(t);e.push(n)}function o(t){e=[...e.slice(0,t),...e.slice(t+1)]}return t.on("createTask",n),t.on("removeTask",o),{tasks:e,addTask:n,handleUpdates:function(t,e,n){t[e]=n},removeTask:o,getTasks:function(){return e.slice()}}}();!function(){let n="inbox";const o=document.createElement("div");o.id="content",document.body.appendChild(o);const i=document.createElement("div");i.id=n,o.appendChild(i);const c=document.createElement("ul");function s(t=c){const o=e.getTasks();t.innerHTML=o.map(((t,e)=>{if(t.project===n)return`\n            <li style="display: inline" data-idx="${e}">${t.title}</li>\n            <button data-idx="${e}" class="remove">Remove Task</button>\n            `})).join(""),document.querySelectorAll(".remove").forEach((t=>t.onclick=d))}i.appendChild(c),s(c),t.on("tasksChanged",s);const a=document.createElement("button");function d(){const e=parseInt(this.dataset.idx);t.emit("removeTask",e),t.emit("tasksChanged",c)}o.appendChild(a),a.textContent="Add new task",a.onclick=function(){const e=prompt("task title");t.emit("createTask",e),t.emit("tasksChanged",c)}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9ldmVudHMuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdGFza3MuanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiZXZlbnRzIiwib24iLCJldmVudE5hbWUiLCJmbiIsInB1c2giLCJlbWl0IiwiZGF0YSIsImZvckVhY2giLCJ0YXNrcyIsInRpdGxlIiwicHJpb3JpdHkiLCJkb25lIiwicHJvamVjdCIsImFkZFRhc2siLCJ0YXNrIiwidGFza0ZhY3RvcnkiLCJyZW1vdmVUYXNrIiwiaW5kZXgiLCJzbGljZSIsImhhbmRsZVVwZGF0ZXMiLCJwcm9wIiwidmFsdWUiLCJnZXRUYXNrcyIsImRpc3BsYXlpbmciLCJjb250ZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJwcm9qZWN0TGlzdCIsImRpc3BsYXlUYXNrcyIsImxpc3QiLCJ0YXNrc0RPTSIsImlubmVySFRNTCIsIm1hcCIsImpvaW4iLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnRuIiwib25jbGljayIsInJlbW92ZVRhc2tEb20iLCJidXR0b24iLCJwYXJzZUludCIsInRoaXMiLCJkYXRhc2V0IiwiaWR4IiwidGV4dENvbnRlbnQiLCJwcm9tcHQiXSwibWFwcGluZ3MiOiJtQkFHQSxNQXFCQSxFQXJCc0IsV0FDbEIsSUFBSUEsRUFBUyxHQWFiLE1BQU8sQ0FDSEMsR0FaSixTQUFZQyxFQUFXQyxHQUNuQkgsRUFBT0UsR0FBYUYsRUFBT0UsSUFBYyxHQUN6Q0YsRUFBT0UsR0FBV0UsS0FBS0QsSUFXdkJFLEtBUkosU0FBZUgsRUFBV0ksR0FDbkJOLEVBQU9FLElBQ05GLEVBQU9FLEdBQVdLLFNBQVFKLEdBQU1BLEVBQUdHLE9BVjFCLEdDMkNuQixFQXBDbUIsV0FDakIsSUFBSUUsRUFBUSxDQUFDLENBQUNDLE1BQU0sUUFBU0MsU0FBVSxNQUFPQyxNQUFNLEVBQU1DLFFBQVEsWUFBWSxDQUFDSCxNQUFNLFFBQVNDLFNBQVMsT0FBUUMsTUFBTSxFQUFPQyxRQUFRLFVBSXRJLFNBQVNDLEVBQVFKLEdBQ2IsTUFBTUssRUFiUSxFQUFDTCxFQUFPRyxFQUFVLFdBQzNCLENBQ0hILFFBQ0FHLFlBVVdHLENBQVlOLEdBQ3pCRCxFQUFNSixLQUFLVSxHQU1mLFNBQVNFLEVBQVdDLEdBQ2xCVCxFQUFRLElBQUlBLEVBQU1VLE1BQU0sRUFBR0QsTUFBV1QsRUFBTVUsTUFBTUQsRUFBUSxJQVk1RCxPQWhCQSxLQUFVLGFBQWNKLEdBT3hCLEtBQVUsYUFBY0csR0FTakIsQ0FDTFIsUUFDQUssVUFDQU0sY0FORixTQUF1QkwsRUFBTU0sRUFBTUMsR0FDOUJQLEVBQUtNLEdBQVFDLEdBTWhCTCxhQUNBTSxTQVhGLFdBQ0UsT0FBT2QsRUFBTVUsVUFyQkcsSUNORCxXQUlmLElBQUlLLEVBQWEsUUFLakIsTUFBTUMsRUFBVUMsU0FBU0MsY0FBYyxPQUN2Q0YsRUFBUUcsR0FBSyxVQUNiRixTQUFTRyxLQUFLQyxZQUFZTCxHQUcxQixNQUFNWixFQUFVYSxTQUFTQyxjQUFjLE9BQ3ZDZCxFQUFRZSxHQUFLSixFQUNiQyxFQUFRSyxZQUFZakIsR0FDcEIsTUFBTWtCLEVBQWNMLFNBQVNDLGNBQWMsTUFLM0MsU0FBU0ssRUFBYUMsRUFBT0YsR0FDekIsTUFBTUcsRUFBVyxhQUNqQkQsRUFBS0UsVUFBWUQsRUFBU0UsS0FBSSxDQUFDckIsRUFBTUcsS0FDakMsR0FBR0gsRUFBS0YsVUFBWVcsRUFDcEIsTUFBTyx1REFDaUNOLE1BQVVILEVBQUtMLDZDQUNuQ1EsMERBRXJCbUIsS0FBSyxJQUVVWCxTQUFTWSxpQkFBaUIsV0FDbEM5QixTQUFRK0IsR0FBT0EsRUFBSUMsUUFBVUMsSUFmM0M1QixFQUFRaUIsWUFBWUMsR0FDcEJDLEVBQWFELEdBaUJiLEtBQVUsZUFBZ0JDLEdBSTFCLE1BQU1VLEVBQVNoQixTQUFTQyxjQUFjLFVBY3RDLFNBQVNjLElBQ0wsTUFBTXZCLEVBQVF5QixTQUFTQyxLQUFLQyxRQUFRQyxLQUNwQyxPQUFZLGFBQWM1QixHQUMxQixPQUFZLGVBQWdCYSxHQWhCaENOLEVBQVFLLFlBQVlZLEdBQ3BCQSxFQUFPSyxZQUFjLGVBQ3JCTCxFQUFPRixRQUdQLFdBQ0ksTUFBTTlCLEVBQVFzQyxPQUFPLGNBQ3JCLE9BQVksYUFBY3RDLEdBQzFCLE9BQVksZUFBZ0JxQixJQWpEbEIsSSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRhc2tzTW9kdWxlIGZyb20gJy4vdGFza3MuanMnXG5pbXBvcnQgZG9tTW9kdWxlIGZyb20gJy4vaW5kZXguanMnXG5cbmNvbnN0IGV2ZW50c01vZHVsZSA9IChmdW5jdGlvbigpe1xuICAgIGxldCBldmVudHMgPSB7fTtcblxuICAgIGZ1bmN0aW9uIG9uKGV2ZW50TmFtZSwgZm4pe1xuICAgICAgICBldmVudHNbZXZlbnROYW1lXSA9IGV2ZW50c1tldmVudE5hbWVdIHx8IFtdXG4gICAgICAgIGV2ZW50c1tldmVudE5hbWVdLnB1c2goZm4pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVtaXQgKGV2ZW50TmFtZSwgZGF0YSkge1xuICAgICAgICBpZihldmVudHNbZXZlbnROYW1lXSkge1xuICAgICAgICAgICAgZXZlbnRzW2V2ZW50TmFtZV0uZm9yRWFjaChmbiA9PiBmbihkYXRhKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIG9uLFxuICAgICAgICBlbWl0XG4gICAgfVxufSgpKTtcblxuXG5leHBvcnQgZGVmYXVsdCBldmVudHNNb2R1bGUiLCJpbXBvcnQgRXZlbnRzIGZyb20gJy4vZXZlbnRzLmpzJ1xuLy8gdGFza3MgZmFjdG9yeVxuXG5jb25zdCB0YXNrRmFjdG9yeSA9ICh0aXRsZSwgcHJvamVjdCA9ICdpbmJveCcpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0aXRsZSxcbiAgICAgICAgcHJvamVjdFxuICAgIH07XG4gIH07XG5cbmNvbnN0IHRhc2tzTW9kdWxlID0gKGZ1bmN0aW9uKCl7XG4gICAgbGV0IHRhc2tzID0gW3t0aXRsZTondGFzazEnLCBwcmlvcml0eTogJ2xvdycsIGRvbmU6IHRydWUsIHByb2plY3Q6J3Byb2plY3QxJ30se3RpdGxlOid0YXNrMicsIHByaW9yaXR5OidoaWdoJywgZG9uZTogZmFsc2UsIHByb2plY3Q6J2luYm94J31dO1xuXG4gIC8vIGNyZWF0ZSB0YXNrIG9iamVjdFxuICBcbiAgZnVuY3Rpb24gYWRkVGFzayh0aXRsZSkge1xuICAgICAgY29uc3QgdGFzayA9IHRhc2tGYWN0b3J5KHRpdGxlKTtcbiAgICAgIHRhc2tzLnB1c2godGFzayk7XG4gIH1cblxuICBFdmVudHMub24oJ2NyZWF0ZVRhc2snLCBhZGRUYXNrKTtcblxuICAvLyByZW1vdmUgdGFzayBvYmplY3RcbiAgZnVuY3Rpb24gcmVtb3ZlVGFzayhpbmRleCkge1xuICAgIHRhc2tzID0gWy4uLnRhc2tzLnNsaWNlKDAsIGluZGV4KSwgLi4udGFza3Muc2xpY2UoaW5kZXggKyAxKV07XG4gIH1cblxuICBFdmVudHMub24oJ3JlbW92ZVRhc2snLCByZW1vdmVUYXNrKTtcblxuICAvLyByZXR1cm4gdGFza3MgYXJyYXlcbiAgZnVuY3Rpb24gZ2V0VGFza3MoKSB7XG4gICAgcmV0dXJuIHRhc2tzLnNsaWNlKClcbiAgfVxuICBmdW5jdGlvbiBoYW5kbGVVcGRhdGVzKHRhc2ssIHByb3AsIHZhbHVlKSB7XG4gICAgICAgdGFza1twcm9wXSA9IHZhbHVlXG4gIH1cbiAgcmV0dXJuIHtcbiAgICB0YXNrcyxcbiAgICBhZGRUYXNrLFxuICAgIGhhbmRsZVVwZGF0ZXMsXG4gICAgcmVtb3ZlVGFzayxcbiAgICBnZXRUYXNrc1xuICB9XG4gIFxufSgpKVxuXG4gIGV4cG9ydCBkZWZhdWx0IHRhc2tzTW9kdWxlIiwiaW1wb3J0IFRhc2tzIGZyb20gJy4vdGFza3MuanMnXG5pbXBvcnQgUHJvamVjdHMgZnJvbSAnLi9wcm9qZWN0cy5qcydcbmltcG9ydCBFdmVudHMgZnJvbSAnLi9ldmVudHMuanMnXG5cbmNvbnN0IGRvbU1vZHVsZSA9IChmdW5jdGlvbigpIHtcblxuLy8gRE9NIFNUVUZGXG4gICAgXG4gICAgbGV0IGRpc3BsYXlpbmcgPSAnaW5ib3gnO1xuICAgIFxuLy8gaGF5IHF1ZSBoYWNlciBkaXNwbGF5IGVsIHByb2plY3QgcXVlIHRpZW5lIHRpdGxlID0gYSBkaXNwbGF5aW5nXG5cbiAgICAvLyBDT05URU5UXG4gICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRlbnQuaWQgPSAnY29udGVudCc7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250ZW50KTtcblxuXG4gICAgY29uc3QgcHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHByb2plY3QuaWQgPSBkaXNwbGF5aW5nO1xuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQocHJvamVjdCk7XG4gICAgY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd1bCcpO1xuICAgIHByb2plY3QuYXBwZW5kQ2hpbGQocHJvamVjdExpc3QpXG4gICAgZGlzcGxheVRhc2tzKHByb2plY3RMaXN0KTtcbiAgIFxuICAgIC8vIGRpc3BsYXkgdGFza3Mgd2l0aCByZW1vdmUgYnV0dG9uIG9uIERPTVxuICAgIGZ1bmN0aW9uIGRpc3BsYXlUYXNrcyhsaXN0ID0gcHJvamVjdExpc3QpIHtcbiAgICAgICAgY29uc3QgdGFza3NET00gPSBUYXNrcy5nZXRUYXNrcygpXG4gICAgICAgIGxpc3QuaW5uZXJIVE1MID0gdGFza3NET00ubWFwKCh0YXNrLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYodGFzay5wcm9qZWN0ICE9PSBkaXNwbGF5aW5nKSByZXR1cm5cbiAgICAgICAgICAgIHJldHVybiBgXG4gICAgICAgICAgICA8bGkgc3R5bGU9XCJkaXNwbGF5OiBpbmxpbmVcIiBkYXRhLWlkeD1cIiR7aW5kZXh9XCI+JHt0YXNrLnRpdGxlfTwvbGk+XG4gICAgICAgICAgICA8YnV0dG9uIGRhdGEtaWR4PVwiJHtpbmRleH1cIiBjbGFzcz1cInJlbW92ZVwiPlJlbW92ZSBUYXNrPC9idXR0b24+XG4gICAgICAgICAgICBgXG4gICAgICAgIH0pLmpvaW4oJycpO1xuXG4gICAgICAgIGNvbnN0IHJtQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5yZW1vdmUnKTtcbiAgICAgICAgcm1CdXR0b25zLmZvckVhY2goYnRuID0+IGJ0bi5vbmNsaWNrID0gcmVtb3ZlVGFza0RvbSlcbiAgICB9XG5cbiAgICBFdmVudHMub24oJ3Rhc2tzQ2hhbmdlZCcsIGRpc3BsYXlUYXNrcyk7XG5cbiAgICAvLyBidXR0b24gZm9yIGFkZGluZyB0YXNrcyB0byBET01cbiAgICBcbiAgICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKGJ1dHRvbik7XG4gICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ0FkZCBuZXcgdGFzayc7XG4gICAgYnV0dG9uLm9uY2xpY2sgPSBDcmVhdGVUYXNrO1xuXG5cbiAgICBmdW5jdGlvbiBDcmVhdGVUYXNrKCkge1xuICAgICAgICBjb25zdCB0aXRsZSA9IHByb21wdCgndGFzayB0aXRsZScpO1xuICAgICAgICBFdmVudHMuZW1pdCgnY3JlYXRlVGFzaycsIHRpdGxlKTtcbiAgICAgICAgRXZlbnRzLmVtaXQoJ3Rhc2tzQ2hhbmdlZCcsIHByb2plY3RMaXN0KTtcbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgdGFzayBET01cbiAgICBcbiAgICBmdW5jdGlvbiByZW1vdmVUYXNrRG9tKCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHBhcnNlSW50KHRoaXMuZGF0YXNldC5pZHgpO1xuICAgICAgICBFdmVudHMuZW1pdCgncmVtb3ZlVGFzaycsIGluZGV4KTtcbiAgICAgICAgRXZlbnRzLmVtaXQoJ3Rhc2tzQ2hhbmdlZCcsIHByb2plY3RMaXN0KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgIH1cbn0oKSk7XG5cbmV4cG9ydCBkZWZhdWx0IGRvbU1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=